mutate(Sexo = case_when(
Sexo == 'F' ~ 'Femenino',
Sexo == 'M' ~ 'Masculino'
))
df_covid_final <- df_covid_final %>%
mutate(`Pertenencia étnica` = case_when(
`Pertenencia étnica` == 1 ~ 'Indígena',
`Pertenencia étnica` == 2 ~ 'ROM',
`Pertenencia étnica` == 3 ~ 'Raizal',
`Pertenencia étnica` == 4 ~ 'Palenquero',
`Pertenencia étnica` == 5 ~ 'Negro',
`Pertenencia étnica` == 6 ~ 'Otro'
))
df_covid_modificado <- df_covid_final
kable(df_covid_modificado, options = list(scrollX = TRUE))
df_resumen <- df_covid_modificado %>%
group_by(Estado) %>%
summarise(cantidad = n(),
Min = min(x=Edad,na.rm = TRUE),
First_Qu = quantile(x = Edad, probs = 0.25, na.rm = TRUE),
Median = median(x = Edad, na.rm = TRUE),
Mean = mean(x = Edad,na.rm = TRUE),
Third_Qu = quantile(x = Edad, probs = 0.75,na.rm = TRUE),
Max = max(x = Edad,na.rm = TRUE)
)
df_resumen
df_resumen_edad <- df_covid_modificado %>%
summarise(
cantidad = n(),  # total
Min = min(Edad, na.rm = TRUE),  # Minimo
Max = max(Edad, na.rm = TRUE),  # Maximo
First_Qu = quantile(Edad, probs = 0.25, na.rm = TRUE),  # Primer cuartil
Third_Qu = quantile(Edad, probs = 0.75, na.rm = TRUE),  # Tercer cuartil
Median = median(Edad, na.rm = TRUE),  # Mediana
Mean = mean(Edad, na.rm = TRUE),  # Media
Varianza = var(Edad, na.rm = TRUE),  # Varianza
Desviacion_Estandar = sd(Edad, na.rm = TRUE),  # Desviación estandar
Rango_Intercuartilico = IQR(Edad, na.rm = TRUE),  # Rango intercuartilico
Coeficiente_Variacion = sd(Edad, na.rm = TRUE) / mean(Edad, na.rm = TRUE),  # Coeficiente de variacion
)
df_resumen_edad
df_cant_dpto <- df_covid_modificado %>%
group_by(`Nombre departamento`) %>%
summarise(Total_Casos = n()) %>%
arrange(desc(Total_Casos))
df_cant_dpto
ggplot(df_cant_dpto, aes(x = reorder(`Nombre departamento`, -Total_Casos), y = Total_Casos)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Total de Casos por Departamento",
x = "Departamento",
y = "Total de Casos") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
df_men_cant <- df_cant_dpto %>%
filter(Total_Casos == min(Total_Casos))
df_men_cant
ggplot(df_men_cant, aes(x = reorder(`Nombre departamento`, -Total_Casos), y = Total_Casos)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Departementos con menor cantidad de casos",
x = "Departamento",
y = "Total de Casos") +
theme_minimal()
df_may_cant <- df_cant_dpto %>%
filter(Total_Casos == max(Total_Casos))
df_may_cant
ggplot(df_may_cant, aes(x = reorder(`Nombre departamento`, -Total_Casos), y = Total_Casos)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Departementos con mayor cantidad de casos",
x = "Departamento",
y = "Total de Casos") +
theme_minimal()
library(dplyr)
library(readxl)
library(ggplot2)
library(knitr)
# Cargamos los datos de los retos anteriores. Estos archivos contienen la información base
# que necesitaremos para realizar el análisis del reto actual. No mostramos este proceso
# al usuario, ya que no es parte del objetivo final, pero es crucial para preparar el marco de datos.
Datos_Covid_1 <- read_excel("data/Datos_Covid_1.xlsx")
Datos_Covid_2 <- read_excel("data/Datos_Covid_2.xlsx")
df_covid1 <- Datos_Covid_1 %>%
select(
`ID de caso`,
`Nombre departamento`,
`Nombre municipio`,
Edad,
`Unidad de medida de edad`,
Sexo,
`Pertenencia étnica`
)
df_covid2 <- Datos_Covid_2 %>%
select(-`Fecha de notificación`)
df_covid_final <- inner_join(df_covid1, df_covid2, by = "ID de caso")
df_covid_final <- df_covid_final %>%
mutate(`Unidad de medida de edad` = case_when(
`Unidad de medida de edad` == 1 ~ 'año',
`Unidad de medida de edad` == 2 ~ 'meses',
`Unidad de medida de edad` == 3 ~ 'dias'
))
df_covid_final <- df_covid_final %>%
mutate(Sexo = case_when(
Sexo == 'F' ~ 'Femenino',
Sexo == 'M' ~ 'Masculino'
))
df_covid_final <- df_covid_final %>%
mutate(`Pertenencia étnica` = case_when(
`Pertenencia étnica` == 1 ~ 'Indígena',
`Pertenencia étnica` == 2 ~ 'ROM',
`Pertenencia étnica` == 3 ~ 'Raizal',
`Pertenencia étnica` == 4 ~ 'Palenquero',
`Pertenencia étnica` == 5 ~ 'Negro',
`Pertenencia étnica` == 6 ~ 'Otro'
))
df_covid_modificado <- df_covid_final
kable(df_covid_modificado_limited, options = list(scrollX = TRUE, scrollY = "400px"))
kable(df_covid_modificado, options = list(scrollX = TRUE), scrollY = "400px"))
kable(df_covid_modificado, options = list(scrollX = TRUE), scrollY = "400px")
kable(df_covid_modificado, options = list(scrollX = TRUE), scrollY = "400px")  %>%
kable_styling("striped", full_width = F)
library(kableExtra)
kable(df_covid_modificado, options = list(scrollX = TRUE), scrollY = "400px")  %>%
kable_styling("striped", full_width = F)
library(kableExtra)
library(dplyr)
library(readxl)
library(ggplot2)
library(knitr)
# Cargamos los datos de los retos anteriores. Estos archivos contienen la información base
# que necesitaremos para realizar el análisis del reto actual. No mostramos este proceso
# al usuario, ya que no es parte del objetivo final, pero es crucial para preparar el marco de datos.
Datos_Covid_1 <- read_excel("data/Datos_Covid_1.xlsx")
Datos_Covid_2 <- read_excel("data/Datos_Covid_2.xlsx")
df_covid1 <- Datos_Covid_1 %>%
select(
`ID de caso`,
`Nombre departamento`,
`Nombre municipio`,
Edad,
`Unidad de medida de edad`,
Sexo,
`Pertenencia étnica`
)
df_covid2 <- Datos_Covid_2 %>%
select(-`Fecha de notificación`)
df_covid_final <- inner_join(df_covid1, df_covid2, by = "ID de caso")
df_covid_final <- df_covid_final %>%
mutate(`Unidad de medida de edad` = case_when(
`Unidad de medida de edad` == 1 ~ 'año',
`Unidad de medida de edad` == 2 ~ 'meses',
`Unidad de medida de edad` == 3 ~ 'dias'
))
df_covid_final <- df_covid_final %>%
mutate(Sexo = case_when(
Sexo == 'F' ~ 'Femenino',
Sexo == 'M' ~ 'Masculino'
))
df_covid_final <- df_covid_final %>%
mutate(`Pertenencia étnica` = case_when(
`Pertenencia étnica` == 1 ~ 'Indígena',
`Pertenencia étnica` == 2 ~ 'ROM',
`Pertenencia étnica` == 3 ~ 'Raizal',
`Pertenencia étnica` == 4 ~ 'Palenquero',
`Pertenencia étnica` == 5 ~ 'Negro',
`Pertenencia étnica` == 6 ~ 'Otro'
))
df_covid_modificado <- df_covid_final
kable(df_covid_modificado, options = list(scrollX = TRUE), scrollY = "400px")  %>%
kable_styling("striped", full_width = F)
df_resumen <- df_covid_modificado %>%
group_by(Estado) %>%
summarise(cantidad = n(),
Min = min(x=Edad,na.rm = TRUE),
First_Qu = quantile(x = Edad, probs = 0.25, na.rm = TRUE),
Median = median(x = Edad, na.rm = TRUE),
Mean = mean(x = Edad,na.rm = TRUE),
Third_Qu = quantile(x = Edad, probs = 0.75,na.rm = TRUE),
Max = max(x = Edad,na.rm = TRUE)
)
df_resumen
df_resumen_edad <- df_covid_modificado %>%
summarise(
cantidad = n(),  # total
Min = min(Edad, na.rm = TRUE),  # Minimo
Max = max(Edad, na.rm = TRUE),  # Maximo
First_Qu = quantile(Edad, probs = 0.25, na.rm = TRUE),  # Primer cuartil
Third_Qu = quantile(Edad, probs = 0.75, na.rm = TRUE),  # Tercer cuartil
Median = median(Edad, na.rm = TRUE),  # Mediana
Mean = mean(Edad, na.rm = TRUE),  # Media
Varianza = var(Edad, na.rm = TRUE),  # Varianza
Desviacion_Estandar = sd(Edad, na.rm = TRUE),  # Desviación estandar
Rango_Intercuartilico = IQR(Edad, na.rm = TRUE),  # Rango intercuartilico
Coeficiente_Variacion = sd(Edad, na.rm = TRUE) / mean(Edad, na.rm = TRUE),  # Coeficiente de variacion
)
df_resumen_edad
df_cant_dpto <- df_covid_modificado %>%
group_by(`Nombre departamento`) %>%
summarise(Total_Casos = n()) %>%
arrange(desc(Total_Casos))
df_cant_dpto
ggplot(df_cant_dpto, aes(x = reorder(`Nombre departamento`, -Total_Casos), y = Total_Casos)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Total de Casos por Departamento",
x = "Departamento",
y = "Total de Casos") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
df_men_cant <- df_cant_dpto %>%
filter(Total_Casos == min(Total_Casos))
df_men_cant
ggplot(df_men_cant, aes(x = reorder(`Nombre departamento`, -Total_Casos), y = Total_Casos)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Departementos con menor cantidad de casos",
x = "Departamento",
y = "Total de Casos") +
theme_minimal()
df_may_cant <- df_cant_dpto %>%
filter(Total_Casos == max(Total_Casos))
df_may_cant
ggplot(df_may_cant, aes(x = reorder(`Nombre departamento`, -Total_Casos), y = Total_Casos)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Departementos con mayor cantidad de casos",
x = "Departamento",
y = "Total de Casos") +
theme_minimal()
df_resumen <- df_covid_modificado %>%
group_by(Estado) %>%
summarise(cantidad = n(),
Min = min(x=Edad,na.rm = TRUE),
First_Qu = quantile(x = Edad, probs = 0.25, na.rm = TRUE),
Median = median(x = Edad, na.rm = TRUE),
Mean = mean(x = Edad,na.rm = TRUE),
Third_Qu = quantile(x = Edad, probs = 0.75,na.rm = TRUE),
Max = max(x = Edad,na.rm = TRUE)
)
kable(df_resumen, options = list(scrollX = TRUE, scrollY = "400px")) %>%
kable_styling("striped", full_width = F)
df_resumen <- df_covid_modificado %>%
group_by(Estado) %>%
summarise(cantidad = n(),
Min = min(x=Edad,na.rm = TRUE),
First_Qu = quantile(x = Edad, probs = 0.25, na.rm = TRUE),
Median = median(x = Edad, na.rm = TRUE),
Mean = mean(x = Edad,na.rm = TRUE),
Third_Qu = quantile(x = Edad, probs = 0.75,na.rm = TRUE),
Max = max(x = Edad,na.rm = TRUE)
)
df_resumen
kable(df_resumen, options = list(scrollX = TRUE, scrollY = "400px")) %>%
kable_styling("striped", full_width = F)
df_resumen <- df_covid_modificado %>%
group_by(Estado) %>%
summarise(cantidad = n(),
Min = min(x=Edad,na.rm = TRUE),
First_Qu = quantile(x = Edad, probs = 0.25, na.rm = TRUE),
Median = median(x = Edad, na.rm = TRUE),
Mean = mean(x = Edad,na.rm = TRUE),
Third_Qu = quantile(x = Edad, probs = 0.75,na.rm = TRUE),
Max = max(x = Edad,na.rm = TRUE)
)
kable(df_resumen, options = list(scrollX = TRUE, scrollY = "400px")) %>%
kable_styling("striped", full_width = F)
kable(df_resumen)
df_resumen <- df_covid_modificado %>%
group_by(Estado) %>%
summarise(cantidad = n(),
Min = min(x=Edad,na.rm = TRUE),
First_Qu = quantile(x = Edad, probs = 0.25, na.rm = TRUE),
Median = median(x = Edad, na.rm = TRUE),
Mean = mean(x = Edad,na.rm = TRUE),
Third_Qu = quantile(x = Edad, probs = 0.75,na.rm = TRUE),
Max = max(x = Edad,na.rm = TRUE)
)
kable(df_resumen)
df_resumen <- df_covid_modificado %>%
group_by(Estado) %>%
summarise(cantidad = n(),
Min = min(x=Edad,na.rm = TRUE),
First_Qu = quantile(x = Edad, probs = 0.25, na.rm = TRUE),
Median = median(x = Edad, na.rm = TRUE),
Mean = mean(x = Edad,na.rm = TRUE),
Third_Qu = quantile(x = Edad, probs = 0.75,na.rm = TRUE),
Max = max(x = Edad,na.rm = TRUE)
)
kable(df_resumen) %>%
kable_styling("striped", full_width = F)
df_resumen <- df_covid_modificado %>%
group_by(Estado) %>%
summarise(cantidad = n(),
Min = min(x=Edad,na.rm = TRUE),
First_Qu = quantile(x = Edad, probs = 0.25, na.rm = TRUE),
Median = median(x = Edad, na.rm = TRUE),
Mean = mean(x = Edad,na.rm = TRUE),
Third_Qu = quantile(x = Edad, probs = 0.75,na.rm = TRUE),
Max = max(x = Edad,na.rm = TRUE)
)
kable(df_resumen) %>%
kable_styling("striped")
View(df_resumen)
library(kableExtra)
library(dplyr)
library(readxl)
library(ggplot2)
library(knitr)
# Cargamos los datos de los retos anteriores. Estos archivos contienen la información base
# que necesitaremos para realizar el análisis del reto actual. No mostramos este proceso
# al usuario, ya que no es parte del objetivo final, pero es crucial para preparar el marco de datos.
Datos_Covid_1 <- read_excel("data/Datos_Covid_1.xlsx")
Datos_Covid_2 <- read_excel("data/Datos_Covid_2.xlsx")
df_covid1 <- Datos_Covid_1 %>%
select(
`ID de caso`,
`Nombre departamento`,
`Nombre municipio`,
Edad,
`Unidad de medida de edad`,
Sexo,
`Pertenencia étnica`
)
df_covid2 <- Datos_Covid_2 %>%
select(-`Fecha de notificación`)
df_covid_final <- inner_join(df_covid1, df_covid2, by = "ID de caso")
df_covid_final <- df_covid_final %>%
mutate(`Unidad de medida de edad` = case_when(
`Unidad de medida de edad` == 1 ~ 'año',
`Unidad de medida de edad` == 2 ~ 'meses',
`Unidad de medida de edad` == 3 ~ 'dias'
))
df_covid_final <- df_covid_final %>%
mutate(Sexo = case_when(
Sexo == 'F' ~ 'Femenino',
Sexo == 'M' ~ 'Masculino'
))
df_covid_final <- df_covid_final %>%
mutate(`Pertenencia étnica` = case_when(
`Pertenencia étnica` == 1 ~ 'Indígena',
`Pertenencia étnica` == 2 ~ 'ROM',
`Pertenencia étnica` == 3 ~ 'Raizal',
`Pertenencia étnica` == 4 ~ 'Palenquero',
`Pertenencia étnica` == 5 ~ 'Negro',
`Pertenencia étnica` == 6 ~ 'Otro'
))
df_covid_modificado <- df_covid_final
kable(df_covid_modificado, options = list(scrollX = TRUE), scrollY = "400px") %>%
kable_styling("striped", full_width = F)
df_resumen <- df_covid_modificado %>%
group_by(Estado) %>%
summarise(cantidad = n(),
Min = min(x=Edad,na.rm = TRUE),
First_Qu = quantile(x = Edad, probs = 0.25, na.rm = TRUE),
Median = median(x = Edad, na.rm = TRUE),
Mean = mean(x = Edad,na.rm = TRUE),
Third_Qu = quantile(x = Edad, probs = 0.75,na.rm = TRUE),
Max = max(x = Edad,na.rm = TRUE)
)
kable(df_resumen) %>%
kable_styling("striped")
df_resumen_edad <- df_covid_modificado %>%
summarise(
cantidad = n(),  # total
Min = min(Edad, na.rm = TRUE),  # Minimo
Max = max(Edad, na.rm = TRUE),  # Maximo
First_Qu = quantile(Edad, probs = 0.25, na.rm = TRUE),  # Primer cuartil
Third_Qu = quantile(Edad, probs = 0.75, na.rm = TRUE),  # Tercer cuartil
Median = median(Edad, na.rm = TRUE),  # Mediana
Mean = mean(Edad, na.rm = TRUE),  # Media
Varianza = var(Edad, na.rm = TRUE),  # Varianza
Desviacion_Estandar = sd(Edad, na.rm = TRUE),  # Desviación estandar
Rango_Intercuartilico = IQR(Edad, na.rm = TRUE),  # Rango intercuartilico
Coeficiente_Variacion = sd(Edad, na.rm = TRUE) / mean(Edad, na.rm = TRUE),  # Coeficiente de variacion
)
kable(df_resumen_edad) %>%
kable_styling("striped")
df_cant_dpto <- df_covid_modificado %>%
group_by(`Nombre departamento`) %>%
summarise(Total_Casos = n()) %>%
arrange(desc(Total_Casos))
kable(df_cant_dpto) %>%
kable_styling("striped")
ggplot(df_cant_dpto, aes(x = reorder(`Nombre departamento`, -Total_Casos), y = Total_Casos)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Total de Casos por Departamento",
x = "Departamento",
y = "Total de Casos") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
df_men_cant <- df_cant_dpto %>%
filter(Total_Casos == min(Total_Casos))
kable(df_men_cant) %>%
kable_styling("striped")
ggplot(df_men_cant, aes(x = reorder(`Nombre departamento`, -Total_Casos), y = Total_Casos)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Departementos con menor cantidad de casos",
x = "Departamento",
y = "Total de Casos") +
theme_minimal()
df_may_cant <- df_cant_dpto %>%
filter(Total_Casos == max(Total_Casos))
kable(df_may_cant) %>%
kable_styling("striped")
ggplot(df_may_cant, aes(x = reorder(`Nombre departamento`, -Total_Casos), y = Total_Casos)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Departementos con mayor cantidad de casos",
x = "Departamento",
y = "Total de Casos") +
theme_minimal()
library(kableExtra)
library(dplyr)
library(readxl)
library(ggplot2)
library(knitr)
# Cargamos los datos de los retos anteriores. Estos archivos contienen la información base
# que necesitaremos para realizar el análisis del reto actual. No mostramos este proceso
# al usuario, ya que no es parte del objetivo final, pero es crucial para preparar el marco de datos.
Datos_Covid_1 <- read_excel("data/Datos_Covid_1.xlsx")
Datos_Covid_2 <- read_excel("data/Datos_Covid_2.xlsx")
df_covid1 <- Datos_Covid_1 %>%
select(
`ID de caso`,
`Nombre departamento`,
`Nombre municipio`,
Edad,
`Unidad de medida de edad`,
Sexo,
`Pertenencia étnica`
)
df_covid2 <- Datos_Covid_2 %>%
select(-`Fecha de notificación`)
df_covid_final <- inner_join(df_covid1, df_covid2, by = "ID de caso")
df_covid_final <- df_covid_final %>%
mutate(`Unidad de medida de edad` = case_when(
`Unidad de medida de edad` == 1 ~ 'año',
`Unidad de medida de edad` == 2 ~ 'meses',
`Unidad de medida de edad` == 3 ~ 'dias'
))
df_covid_final <- df_covid_final %>%
mutate(Sexo = case_when(
Sexo == 'F' ~ 'Femenino',
Sexo == 'M' ~ 'Masculino'
))
df_covid_final <- df_covid_final %>%
mutate(`Pertenencia étnica` = case_when(
`Pertenencia étnica` == 1 ~ 'Indígena',
`Pertenencia étnica` == 2 ~ 'ROM',
`Pertenencia étnica` == 3 ~ 'Raizal',
`Pertenencia étnica` == 4 ~ 'Palenquero',
`Pertenencia étnica` == 5 ~ 'Negro',
`Pertenencia étnica` == 6 ~ 'Otro'
))
df_covid_modificado <- df_covid_final
kable(df_covid_modificado, options = list(scrollX = TRUE), scrollY = "400px") %>%
kable_styling("striped", full_width = F)
df_resumen <- df_covid_modificado %>%
group_by(Estado) %>%
summarise(cantidad = n(),
Min = min(x=Edad,na.rm = TRUE),
First_Qu = quantile(x = Edad, probs = 0.25, na.rm = TRUE),
Median = median(x = Edad, na.rm = TRUE),
Mean = mean(x = Edad,na.rm = TRUE),
Third_Qu = quantile(x = Edad, probs = 0.75,na.rm = TRUE),
Max = max(x = Edad,na.rm = TRUE)
)
kable(df_resumen) %>%
kable_styling("striped")
df_resumen_edad <- df_covid_modificado %>%
summarise(
cantidad = n(),  # total
Min = min(Edad, na.rm = TRUE),  # Minimo
Max = max(Edad, na.rm = TRUE),  # Maximo
First_Qu = quantile(Edad, probs = 0.25, na.rm = TRUE),  # Primer cuartil
Third_Qu = quantile(Edad, probs = 0.75, na.rm = TRUE),  # Tercer cuartil
Median = median(Edad, na.rm = TRUE),  # Mediana
Mean = mean(Edad, na.rm = TRUE),  # Media
Varianza = var(Edad, na.rm = TRUE),  # Varianza
Desviacion_Estandar = sd(Edad, na.rm = TRUE),  # Desviación estandar
Rango_Intercuartilico = IQR(Edad, na.rm = TRUE),  # Rango intercuartilico
Coeficiente_Variacion = sd(Edad, na.rm = TRUE) / mean(Edad, na.rm = TRUE),  # Coeficiente de variacion
)
kable(df_resumen_edad) %>%
kable_styling("striped")
df_cant_dpto <- df_covid_modificado %>%
group_by(`Nombre departamento`) %>%
summarise(Total_Casos = n()) %>%
arrange(desc(Total_Casos))
kable(df_cant_dpto) %>%
kable_styling("striped")
ggplot(df_cant_dpto, aes(x = reorder(`Nombre departamento`, -Total_Casos), y = Total_Casos)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Total de Casos por Departamento",
x = "Departamento",
y = "Total de Casos") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
df_men_cant <- df_cant_dpto %>%
filter(Total_Casos == min(Total_Casos))
kable(df_men_cant) %>%
kable_styling("striped")
ggplot(df_men_cant, aes(x = reorder(`Nombre departamento`, -Total_Casos), y = Total_Casos)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Departementos con menor cantidad de casos",
x = "Departamento",
y = "Total de Casos") +
theme_minimal()
df_may_cant <- df_cant_dpto %>%
filter(Total_Casos == max(Total_Casos))
kable(df_may_cant) %>%
kable_styling("striped")
ggplot(df_may_cant, aes(x = reorder(`Nombre departamento`, -Total_Casos), y = Total_Casos)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Departementos con mayor cantidad de casos",
x = "Departamento",
y = "Total de Casos") +
theme_minimal()
